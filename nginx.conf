events {
    worker_connections 1024;
}

http {
    upstream service1_cluster {
        ip_hash;
        server service1:8199;
        server service1:8199;
        server service1:8199;
    }

    server {
        listen 8197;

        # # Enable basic authentication for the root path and all sub-paths
        # auth_basic "Restricted Access";
        # auth_basic_user_file /etc/nginx/.htpasswd;

        location /state {
            proxy_pass http://service1_cluster/state;
            proxy_set_header Host $host;
            proxy_set_header Content-Type text/plain;
            proxy_set_header Accept text/plain;
        }

        location /run-log {
            proxy_pass http://service1_cluster/run-log;
            proxy_set_header Host $host;
            proxy_set_header Content-Type text/plain;
            proxy_set_header Accept text/plain;
        }

        location /request {
            proxy_pass http://service1_cluster/request;
            proxy_set_header Host $host;
            proxy_set_header Content-Type text/plain;
            proxy_set_header Accept text/plain;

        }
        # Default redirect to login
        location = / {
            return 301 /login.html;
        }

        # index page
        location = /index.html {
            root /etc/nginx/html;
            auth_basic "Restricted Access";
            auth_basic_user_file /etc/nginx/.htpasswd;
            error_page 401 = @return_login;
        }

        # Other static files
        location ~ \.(html|css|js)$ {
            root /etc/nginx/html;
            auth_basic off;
        }

        location @return_login {
            return 301 /login.html;
        }

        # Route API requests to the load-balanced service1 instances
        location /api/ {
            auth_basic "Restricted Access";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://service1_cluster/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Stop all services when POSTed to /api/stop
        location /api/stop {
            auth_basic "Restricted Access";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://service1:8199/stop;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

             # Add health check logic
            proxy_intercept_errors on;
            error_page 503 = @unavailable;
        }

        location @unavailable {
        return 503;
        }
    }
}
