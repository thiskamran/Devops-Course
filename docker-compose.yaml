version: '3.8'

services:
  service1:
    image: service1-image
    build:
      context: ./service1
      dockerfile: Dockerfile
    ports:
      - "8199"
    volumes:
      - ./:/app 
      - /var/run/docker.sock:/var/run/docker.sock # Mount the Docker socket
    working_dir: /app/service1  # Set the working directory
    deploy:
      replicas: 3  # Create 3 instances of service1
    stop_grace_period: 10s  # Give containers time to shutdown gracefully
    stop_signal: SIGTERM    # Use SIGTERM for shutdown
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8199/request"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - app-network 

  service2:
    image: service2-image
    build:
      context: ./service2
      dockerfile: Dockerfile
    ports:
      - "8080"
    networks:
      - app-network

  nginx:
    image: nginx:latest
    ports:
      - "8198:80"
      - "8197:8197"   # Expose the port 8197
    volumes:
    - ./nginx.conf:/etc/nginx/nginx.conf
    - ./.htpasswd:/etc/nginx/.htpasswd
    - ./public:/etc/nginx/html     # Mount the HTML directory
    # - ./start.sh:/start.sh
    # command: ["sh", "/start.sh"]
    networks: 
      - app-network

networks:
  app-network:
    driver: bridge